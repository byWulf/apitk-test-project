<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: planet.proto

namespace Myapi\Proto\V1\Planet;

use UnexpectedValueException;

/**
 * Protobuf type <code>myapi.proto.v1.Planet.Type</code>
 */
class Type
{
    /**
     * Generated from protobuf enum <code>GAS = 0;</code>
     */
    const GAS = 0;
    /**
     * Generated from protobuf enum <code>STONE = 1;</code>
     */
    const STONE = 1;
    /**
     * Generated from protobuf enum <code>ICE = 2;</code>
     */
    const ICE = 2;

    private static $valueToName = [
        self::GAS => 'GAS',
        self::STONE => 'STONE',
        self::ICE => 'ICE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Type::class, \Myapi\Proto\V1\Planet_Type::class);

